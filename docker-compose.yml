
services:
  scraper:
    build: .
    environment:
      - CONFIG_FILE=/config/config.json
      - DATABASE_PATH=postgresql://${db_user}:${db_password}@postgres:5432/${MB_DBNAME}
    volumes:
      - ./config:/config:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - metanet1
    depends_on:
      - postgres

  metabase-app:
    build:
      context: build_metabase
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${MB_DBNAME}
      MB_DB_PORT: 5432
      MB_DB_USER: ${db_user}
      MB_DB_PASS: ${db_password}
      MB_DB_HOST: postgres
      MB_ENCRYPTION_SECRET_KEY: ${mb_key}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.metabasereports.rule=Host(`${MB_HOST}`)"
      - "traefik.http.routers.metabasereports.entrypoints=websecure"
      - "traefik.http.routers.metabasereports.tls.certresolver=myresolver"
    networks:
      - metanet1
    depends_on:
      - postgres
      - scraper

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_DB: ${MB_DBNAME}
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - metanet1
    restart: always

volumes:
  postgres-data:

networks:
  metanet1:
    driver: bridge
