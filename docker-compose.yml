
services:
  sqlite:
    image: nouchka/sqlite3:latest
    container_name: sqlite3
    volumes:
      - ./sqlite_db:/sqlite-data
    restart: always

  scraper:
    build: .
    environment:
      - CONFIG_FILE=/config/config.json
      - DATABASE_PATH=sqlite:////sqlite-data/exchanges_db.sqlite
    volumes:
      - ./sqlite-data:/sqlite-data
      - ./config:/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - sqlite

  metabase-app:
    build:
      context: build_metabase
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
      - ./sqlite-data:/sqlite-data
    ports:
      - "3000:3000"
    env_file:
      - .env
      - .env.secrets
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${MB_DBNAME}
      MB_DB_PORT: 5432
      MB_DB_USER_FILE: ${db_user}
      MB_DB_PASS_FILE: ${db_password}
      MB_DB_HOST: postgres
      MB_ENCRYPTION_SECRET_KEY: ${mb_key}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.metabasereports.rule=Host(`${MB_HOST}`)"
      - "traefik.http.routers.metabasereports.entrypoints=websecure"
      - "traefik.http.routers.metabasereports.tls.certresolver=myresolver"
    networks:
      - metanet1
    depends_on:
      - postgres
      - scraper

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    env_file:
      - .env
      - .env.secrets
    environment:
      POSTGRES_DB: ${MB_DBNAME}
      POSTGRES_USER_FILE: ${db_user}
      POSTGRES_PASSWORD_FILE: ${db_password}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - metanet1
    restart: always

  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LE_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - metanet1
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always

networks:
  metanet1:
    driver: bridge
